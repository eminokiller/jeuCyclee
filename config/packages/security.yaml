security:
    encoders:
        App\Entity\Admin:
            algorithm: auto
        App\Entity\Joueur:
            id: 'App\Security\FaultyPasswordEncoder'
        Symfony\Component\Security\Core\User\User: 'auto'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        admin_provider:
            entity:
                class: App\Entity\Admin
                property: email
        joueur_provider:
            entity:
                class: App\Entity\Joueur
                property: email
        all_users:
            chain:
                providers: [ 'app_user_provider','joueur_provider','admin_provider']
    firewalls:
        login:
            pattern: /api/login
            stateless: true
            anonymous: true
            provider: joueur_provider
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            guard:
                provider: joueur_provider
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        admin_acces:
            anonymous: true
            pattern: ^/admin
            form_login:
                provider: admin_provider
                login_path: admin_login
                check_path: /admin/login
                csrf_token_generator: security.csrf.token_manager
                default_target_path: admin_index
                failure_path: admin_login
                success_handler: account.security_listener
                username_parameter: email
                password_parameter: password
            logout:
                path: app_logout
                target: /admin/login
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: admin_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # Admin && Recruiter
         - { path: ^/admin/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/profile, roles: ROLE_USER }
